---
import { siteConfig } from '../data/siteConfig';
import { generateJsonLd, getCanonicalUrl } from '../data/seoUtils';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  type?: string;
  robotsDirectives?: string;
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    tags?: string[];
  };
}

const { 
  title = siteConfig.title, 
  description = siteConfig.description,
  image = siteConfig.ogImage,
  canonicalURL = getCanonicalUrl(Astro.url.pathname),
  type = 'website',
  robotsDirectives,
  article
} = Astro.props;

// Ensure image has absolute URL
const absoluteImageUrl = image.startsWith('http') 
  ? image 
  : new URL(image, Astro.site || siteConfig.siteUrl).toString();

// Generate JSON-LD
const jsonLdOptions = {
  type: type === 'article' ? 'Article' : 'WebSite',
  title,
  description,
  url: canonicalURL,
  image: absoluteImageUrl,
  datePublished: article?.publishedTime,
  dateModified: article?.modifiedTime || article?.publishedTime,
};

const jsonLd = generateJsonLd(jsonLdOptions);
---

<!-- Basic metadata -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<meta name="description" content={description} />

<!-- SEO Meta Tags -->
<meta name="author" content={siteConfig.author.name} />
<meta name="keywords" content={siteConfig.keywords.join(', ')} />
<link rel="canonical" href={canonicalURL} />

<!-- Robots directives (for special pages like 404) -->
{robotsDirectives && <meta name="robots" content={robotsDirectives} />}

<!-- Open Graph / Facebook -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={absoluteImageUrl} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={siteConfig.title} />
<meta property="og:locale" content={siteConfig.locale} />

{article && (
  <>
    <meta property="article:published_time" content={article.publishedTime} />
    {article.modifiedTime && <meta property="article:modified_time" content={article.modifiedTime} />}
    {article.tags?.map(tag => <meta property="article:tag" content={tag} />)}
  </>
)}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={absoluteImageUrl} />
{siteConfig.author.twitter && <meta name="twitter:creator" content={siteConfig.author.twitter} />}

<!-- RSS Feed -->
<link rel="alternate" type="application/rss+xml" title={siteConfig.rss.title} href={siteConfig.rss.feedPath} />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- JSON-LD for structured data -->
<script type="application/ld+json" set:html={jsonLd} />

<title>{title}</title> 
