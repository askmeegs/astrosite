---
const { size = "md", message = "Loading..." } = Astro.props;

// Size classes
const sizeClass = {
  sm: "text-xl",
  md: "text-3xl",
  lg: "text-5xl"
}[size] || "text-3xl";

// Loading messages
const loadingMessages = [
  "Feeding the doges...",
  "Generating memes...",
  "Petting cats...",
  "Spinning the hamster wheel...",
  "Buffering cuteness...",
  "Loading happiness...",
  "Summoning rainbow powers...",
  "Much loading, very wait..."
];

// Get random message if default is used
const displayMessage = message === "Loading..." 
  ? loadingMessages[Math.floor(Math.random() * loadingMessages.length)]
  : message;
---

<div class="meme-loader flex flex-col items-center justify-center p-4">
  <div class="emoji-spinner mb-4">
    <div class="emoji-container">
      <span class={`emoji ${sizeClass}`}>üêï</span>
      <span class={`emoji ${sizeClass}`}>üê±</span>
      <span class={`emoji ${sizeClass}`}>ü¶Ñ</span>
      <span class={`emoji ${sizeClass}`}>üåà</span>
    </div>
  </div>
  <p class="font-comic text-gray-600 pulsate">{displayMessage}</p>
</div>

<style>
  .emoji-spinner {
    position: relative;
    width: 80px;
    height: 80px;
  }
  
  .emoji-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: spin 8s ease-in-out infinite;
  }
  
  .emoji {
    position: absolute;
    opacity: 0;
    animation: fadeInOut 8s ease-in-out infinite;
    transform-origin: center;
  }
  
  .emoji:nth-child(1) {
    animation-delay: 0s;
  }
  
  .emoji:nth-child(2) {
    animation-delay: 2s;
  }
  
  .emoji:nth-child(3) {
    animation-delay: 4s;
  }
  
  .emoji:nth-child(4) {
    animation-delay: 6s;
  }
  
  @keyframes fadeInOut {
    0%, 100% { opacity: 0; transform: scale(0.7); }
    3%, 22% { opacity: 1; transform: scale(1); }
    25% { opacity: 0; transform: scale(0.7); }
  }
</style> 
